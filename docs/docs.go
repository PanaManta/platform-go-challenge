// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/favorites": {
            "get": {
                "description": "Retrieves all the favorites for the user. Requires a valid user JWT in the Authorization header.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Get User Favorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization header with Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user favorites",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodels.FavoriteView"
                            }
                        }
                    }
                }
            }
        },
        "/api/favorites/{asset_id}": {
            "post": {
                "description": "Adds a user favorite in the repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Add User Favorite in the temporary repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization header with Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset ID to be added as a favorite",
                        "name": "asset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Added entry",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.FavoriteViewActionResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user favorite in the repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Delete User Favorite in the temporary repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization header with Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset ID to be added as a favorite",
                        "name": "asset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted entry",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.FavoriteViewActionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "viewmodels.FavoriteView": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "data": {},
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "viewmodels.FavoriteViewActionResponse": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
